"Games"
{
	"left4dead2"
	{
		"Functions"
		{
			"CGasCan::GetTargetEntity"
			{
				"offset"	"CGasCan::GetTargetEntity"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
				"arguments"
				{
					"a1"
					{
						"type"	"cbaseentity"
					}
				}
			}
		}
		"Addresses"
		{
			"TheCount"
			{
				"linux"
				{
					"signature"	"nav_update_lighting"
					"read"		"17"
				}
				"windows"
				{
					"signature"	"nav_update_lighting"
					"read"		"70"
				}
			}
			"NextBotCreatePlayerBot<SurvivorBot>"
			{
				"signature" "NextBotCreatePlayerBot<SurvivorBot>"
			}
		}

		"Offsets"
		{
			"OS"
			{
				"linux"		"2"
				"windows"	"1"
			}
			/* TerrorNavArea::ScriptGetSpawnAttributes(TerrorNavArea *__hidden this) */
			"TerrorNavArea::ScriptGetSpawnAttributes"
			{
				"linux"		"300"	//mov	 eax, [eax+12Ch]
				"windows"	"296"	//mov	 eax, [ecx+128h]
			}
			/* CPropDoorRotatingCheckpoint::IsCheckpointDoor(CPropDoorRotatingCheckpoint *__hidden this) */
			"CPropDoorRotatingCheckpoint::IsCheckpointDoor"
			{
				"linux"		"286"
				"windows"	"238"
			}
			/* CPropDoorRotatingCheckpoint::IsCheckpointExitDoor(CPropDoorRotatingCheckpoint *__hidden this) */
			"CPropDoorRotatingCheckpoint::IsCheckpointExitDoor"
			{
				"linux"		"287"
				"windows"	"239"
			}
			/**
			 * CTerrorPlayer::GetFlowDistance(CNavArea const*)
			 *
			 * How to find on Windows:
			 * 1. Find the function's offsets with asherkin's VTable dump.
			 * 2. Use IDA to get the VTable dump for the "CTerrorPlayer" class on Windows.
			 * 3. Compare your dump's offsets with asherkin's dump's offsets to find the target function.
			 * 4. Look for the target function in the Windows binary.
			 * 5. Look for the 7-byte float (FLD) instruction.
			 * 6. The offset at the very end of that line of code is the offset for "m_flow".
			 *
			 * How to find on Linux:
			 * 1. Locate the function.
			 * 2. Look for the 9-byte move (MOVSS) instruction.
			 * 3. The offset at the very end of that line of code is the offset for "m_flow".
			 **/
			"CTerrorPlayer::GetFlowDistance::m_flow"
			{
				"linux"		"340"
				"windows"	"332"
			}
			/* CGasCan::GetTargetEntity(CCarriedProp *, CTerrorPlayer *) */
			"CGasCan::GetTargetEntity"
			{
				"linux"		"448"
				"windows"	"446"
			}
		}
	
		"Signatures"
		{
			/* nav_update_lighting(const CCommand *) */
			"nav_update_lighting"
			{
				"library"	"server"
				"linux"		"@_ZL19nav_update_lightingRK8CCommand"
				"windows"	"\x2A\x2A\x2A\x2A\x2A\x2A\x57\x33\x2A\x83\x2A\x2A\x75"
				/* ? ? ? ? ? ? 57 33 ? 83 ? ? 75 */
			}
			"CommandNavSave"
			{
				"library"	"server"
				"windows"	"\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x74\x2A\x8B\x0D\x2A\x2A\x2A\x2A\x8B\x2A\x8B\x2A\x2A\xFF\x2A\x8B\x0D\x2A\x2A\x2A\x2A\x84"
				/* ? ? ? ? ? ? ? 74 ? 8B 0D ? ? ? ? 8B ? 8B ? ? FF ? 8B 0D ? ? ? ? 84 */
			}
			/*  C++ Function:	CBaseEntity* __cdecl NextBotCreatePlayerBotSurvivorBot(const char *src) */
			/* Search string:	 CreatePlayerBot: Could not Instance() from the bot edict */
			/* Windows signature:	 (so crazy->to long)55 8B EC 83 EC 28 A1 ?? ?? ?? ?? 33 C5 89 45 FC 56 57 8B 7D 08 68 ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B 0D ?? ?? ?? ?? 8B 01 8B 90 DC 00 00 00 83 C4 04 57 FF D2 6A 00 8B F0 E8 ?? ?? ?? ?? 83 C4 04 85 F6 75 21 57 */
			/* Windows signature2: 	33 C0 6A 00 68 FC ?? ?? ?? 68 ?? ?? ?? ?? 6A 00 50 E8 ?? ?? ?? ?? 8B F0 83 C4 14 85 F6 75 20 68 ?? ?? ?? ?? FF 15 */
			/* Windows signature3:  E8 ?? ?? ?? ?? 83 C4 08 85 C0 74 1C 8B 10 8B 92  this  signature into <CDirector::AddSurvivorBot> */
			/* Finally:	 33 C0 6A 00 68 FC (warning:0xFC may be change when next game version) */
			/* Version: 	2209 */
			/* 
			*	Where call this function: 
			*	RestoreTransitionedSurvivorBots(void);	CDirector::AddSurvivorBot(SurvivorCharacterType)
			*/
			"NextBotCreatePlayerBot<SurvivorBot>"
			{	
				"library"	"server"
				"linux"		"@_Z22NextBotCreatePlayerBotI11SurvivorBotEPT_PKc"
				"windows"	"\xE8****\x83\xC4\x08\x85\xC0\x74\x1C\x8B\x10\x8B"
				/* E8 ? ? ? ? 83 C4 08 85 C0 74 1C 8B 10 8B */
				/* (addr+5) + *(addr+1) = call function addr -> this  signature into <CDirector::AddSurvivorBot> */
				/* Sig. should point to "call" opcode E8, not to the func. start */
			}
			/* SurvivorBot::IsReachable(SurvivorBot *__hidden this, CNavArea *, CNavArea *) */
			"SurvivorBot::IsReachable<CNavArea>"
			{
				"library"	"server"
				"linux"		"@_ZNK11SurvivorBot11IsReachableEP8CNavAreaS1_"
				"windows"	"\x2A\x2A\x2A\x2A\x2A\x2A\x53\x8B\x2A\x2A\x56\x57\x8B\x2A\x2A\x53\x57\x8B\x2A\xE8\x2A\x2A\x2A\x2A\x83"
				/* ? ? ? ? ? ? 53 8B ? ? 56 57 8B ? ? 53 57 8B ? E8 ? ? ? ? 83 */
			}
		}
	}
}
